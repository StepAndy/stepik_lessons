{"name": "test_guest_can_add_product_to_basket[offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Alert must contain product 'Coders at Work', but got 'Coders at Work book'", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x0000024A9BC03FA0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ce0a3928b21d029e8f28b4697491b7b0\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\",\n                              \"offer3\", \"offer4\", \"offer5\",\n                              \"offer6\", pytest.param(\"offer7\", marks=pytest.mark.xfail),\n                              \"offer8\", \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        full_promo_link = ProductPage.LINK + '?promo=' + promo_offer\n        page = ProductPage(browser, full_promo_link)\n        page.open()\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n>       page.check_specific_product_was_added_to_basket()\n\nmodule_5\\test_product_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000024A9BBE2B20>\n\n    def check_specific_product_was_added_to_basket(self):\n        product_name = self.get_product_name()\n        product_name_in_alert = self.browser.find_element(*ProductPageLocators.PRODUCT_NAME_IN_ALERT).text\n>       assert product_name == product_name_in_alert, \\\n            f\"Alert must contain product '{product_name}', but got '{product_name_in_alert}'\"\nE       AssertionError: Alert must contain product 'Coders at Work', but got 'Coders at Work book'\n\nmodule_5\\pages\\product_page.py:18: AssertionError"}, "attachments": [{"name": "stdout", "source": "3628c735-094f-46b8-a297-7891be3a2a33-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1624564373881, "stop": 1624564378260, "uuid": "d102218a-b02b-471c-8c36-ddd40d7a1d1f", "historyId": "8433857a769ecd2ca3eba03399b040cb", "testCaseId": "0dfdfd1797a0034073e745572a047fc5", "fullName": "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "module_5"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "ANStepan-L-SPB"}, {"name": "thread", "value": "11560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "module_5.test_product_page"}]}