{
  "uid" : "a87ef06120fdc65b",
  "name" : "test_guest_can_add_product_to_basket[offer7]",
  "fullName" : "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket",
  "historyId" : "8433857a769ecd2ca3eba03399b040cb",
  "time" : {
    "start" : 1624564373881,
    "stop" : 1624564378260,
    "duration" : 4379
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Alert must contain product 'Coders at Work', but got 'Coders at Work book'",
  "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x0000024A9BC03FA0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ce0a3928b21d029e8f28b4697491b7b0\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\",\n                              \"offer3\", \"offer4\", \"offer5\",\n                              \"offer6\", pytest.param(\"offer7\", marks=pytest.mark.xfail),\n                              \"offer8\", \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        full_promo_link = ProductPage.LINK + '?promo=' + promo_offer\n        page = ProductPage(browser, full_promo_link)\n        page.open()\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n>       page.check_specific_product_was_added_to_basket()\n\nmodule_5\\test_product_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000024A9BBE2B20>\n\n    def check_specific_product_was_added_to_basket(self):\n        product_name = self.get_product_name()\n        product_name_in_alert = self.browser.find_element(*ProductPageLocators.PRODUCT_NAME_IN_ALERT).text\n>       assert product_name == product_name_in_alert, \\\n            f\"Alert must contain product '{product_name}', but got '{product_name_in_alert}'\"\nE       AssertionError: Alert must contain product 'Coders at Work', but got 'Coders at Work book'\n\nmodule_5\\pages\\product_page.py:18: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1624564371491,
      "stop" : 1624564373881,
      "duration" : 2390
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "language",
    "time" : {
      "start" : 1624564371490,
      "stop" : 1624564371491,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Alert must contain product 'Coders at Work', but got 'Coders at Work book'",
    "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x0000024A9BC03FA0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ce0a3928b21d029e8f28b4697491b7b0\")>\npromo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\",\n                              \"offer3\", \"offer4\", \"offer5\",\n                              \"offer6\", pytest.param(\"offer7\", marks=pytest.mark.xfail),\n                              \"offer8\", \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        full_promo_link = ProductPage.LINK + '?promo=' + promo_offer\n        page = ProductPage(browser, full_promo_link)\n        page.open()\n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n>       page.check_specific_product_was_added_to_basket()\n\nmodule_5\\test_product_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x0000024A9BBE2B20>\n\n    def check_specific_product_was_added_to_basket(self):\n        product_name = self.get_product_name()\n        product_name_in_alert = self.browser.find_element(*ProductPageLocators.PRODUCT_NAME_IN_ALERT).text\n>       assert product_name == product_name_in_alert, \\\n            f\"Alert must contain product '{product_name}', but got '{product_name_in_alert}'\"\nE       AssertionError: Alert must contain product 'Coders at Work', but got 'Coders at Work book'\n\nmodule_5\\pages\\product_page.py:18: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "71b19db352b3158a",
      "name" : "stdout",
      "source" : "71b19db352b3158a.txt",
      "type" : "text/plain",
      "size" : 59
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1624564382437,
      "stop" : 1624564384564,
      "duration" : 2127
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "module_5"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestProductPage"
  }, {
    "name" : "host",
    "value" : "ANStepan-L-SPB"
  }, {
    "name" : "thread",
    "value" : "11560-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "module_5.test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "promo_offer",
    "value" : "'offer7'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "a87ef06120fdc65b.json",
  "parameterValues" : [ "'offer7'" ]
}